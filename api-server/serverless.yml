service: leap-faucet

custom:
  serverless-offline:
    port: 3001
  table: merkleDb-${opt:stage}
  region: eu-west-1

package:
  exclude:
    - src/**/*.test.js

provider:
  name: aws
  region: eu-west-1
  runtime: nodejs8.10
  timeout: 30
  iamRoleStatements:
    - Effect: Allow
      Action:
        - ssm:GetParameters
        - ssm:GetParameter
      Resource: "arn:aws:ssm:*:*:parameter/faucet/${opt:stage}/*"
    - Effect: Allow
      Action:
        - sdb:GetAttributes
        - sdb:PutAttributes
      Resource:
        Fn::Join:
          - ""
          - - "arn:aws:sdb:*:*:domain/"
            - Ref: merkleDb

responseMappings: &response_mappings
  headers:
    Content-Type: "'application/json'"
  statusCodes:
    200:
      pattern: ""
      headers:
        Access-Control-Allow-Origin: "'*'"
      template:
        application/json: ""
    400:
      pattern: "Bad Request: .*"
      headers:
        Access-Control-Allow-Origin: "'*'"
      template:
        application/json: ""
    401:
      pattern: "Unauthorized: .*"
      headers:
        Access-Control-Allow-Origin: "'*'"
      template:
        application/json: ""
    403:
      pattern: "Forbidden: .*"
      headers:
        Access-Control-Allow-Origin: "'*'"
      template:
        application/json: ""
    404:
      pattern: "Not Found: .*"
      headers:
        Access-Control-Allow-Origin: "'*'"
      template:
        application/json: ""
    500:
      pattern: "Error: .*"
      headers:
        Access-Control-Allow-Origin: "'*'"

functions:
  merkleNinja:
    timeout: 3
    handler: src/merkle.handler
    name: merkle-${opt:stage}-handling
    environment:
      REGION: ${self:custom.region}
      TABLE_NAME:
        Ref: merkleDb
    events:
      - http:
          method: post
          path: /address
          integration: lambda
          cors: true
          response: *response_mappings

plugins:
  - serverless-offline

resources:
  Resources:
    faucetDb:
      Type: "AWS::SDB::Domain"
      Properties:
        DomainName: ${self:custom.table}
        Description: "SDB Domain to store metadata"
